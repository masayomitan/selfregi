// Code generated by ent, DO NOT EDIT.

package account

import (
	"time"
)

const (
	// Label holds the string label denoting the account type in the database.
	Label = "account"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldVisitorID holds the string denoting the visitor_id field in the database.
	FieldVisitorID = "visitor_id"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldSubtotal holds the string denoting the subtotal field in the database.
	FieldSubtotal = "subtotal"
	// FieldTotal holds the string denoting the total field in the database.
	FieldTotal = "total"
	// FieldTax holds the string denoting the tax field in the database.
	FieldTax = "tax"
	// FieldTaxRate holds the string denoting the tax_rate field in the database.
	FieldTaxRate = "tax_rate"
	// FieldDiscountClass holds the string denoting the discount_class field in the database.
	FieldDiscountClass = "discount_class"
	// FieldDiscountRate holds the string denoting the discount_rate field in the database.
	FieldDiscountRate = "discount_rate"
	// FieldDiscountPrice holds the string denoting the discount_price field in the database.
	FieldDiscountPrice = "discount_price"
	// FieldPaidPrice holds the string denoting the paid_price field in the database.
	FieldPaidPrice = "paid_price"
	// FieldChange holds the string denoting the change field in the database.
	FieldChange = "change"
	// EdgeManagedAccountDetails holds the string denoting the managed_account_details edge name in mutations.
	EdgeManagedAccountDetails = "managed_account_details"
	// EdgeOwner holds the string denoting the owner edge name in mutations.
	EdgeOwner = "owner"
	// Table holds the table name of the account in the database.
	Table = "accounts"
	// ManagedAccountDetailsTable is the table that holds the managed_account_details relation/edge.
	ManagedAccountDetailsTable = "account_details"
	// ManagedAccountDetailsInverseTable is the table name for the AccountDetail entity.
	// It exists in this package in order to avoid circular dependency with the "accountdetail" package.
	ManagedAccountDetailsInverseTable = "account_details"
	// ManagedAccountDetailsColumn is the table column denoting the managed_account_details relation/edge.
	ManagedAccountDetailsColumn = "account_managed_account_details"
	// OwnerTable is the table that holds the owner relation/edge.
	OwnerTable = "accounts"
	// OwnerInverseTable is the table name for the Visitor entity.
	// It exists in this package in order to avoid circular dependency with the "visitor" package.
	OwnerInverseTable = "visitors"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "visitor_managed_accounts"
)

// Columns holds all SQL columns for account fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldVisitorID,
	FieldStatus,
	FieldSubtotal,
	FieldTotal,
	FieldTax,
	FieldTaxRate,
	FieldDiscountClass,
	FieldDiscountRate,
	FieldDiscountPrice,
	FieldPaidPrice,
	FieldChange,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "accounts"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"visitor_managed_accounts",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// VisitorIDValidator is a validator for the "visitor_id" field. It is called by the builders before save.
	VisitorIDValidator func(int) error
)
