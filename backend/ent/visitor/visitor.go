// Code generated by ent, DO NOT EDIT.

package visitor

import (
	"time"
)

const (
	// Label holds the string label denoting the visitor type in the database.
	Label = "visitor"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldSex holds the string denoting the sex field in the database.
	FieldSex = "sex"
	// FieldBillStatus holds the string denoting the bill_status field in the database.
	FieldBillStatus = "bill_status"
	// EdgeManagedAccounts holds the string denoting the managed_accounts edge name in mutations.
	EdgeManagedAccounts = "managed_accounts"
	// EdgeCarts holds the string denoting the carts edge name in mutations.
	EdgeCarts = "carts"
	// Table holds the table name of the visitor in the database.
	Table = "visitors"
	// ManagedAccountsTable is the table that holds the managed_accounts relation/edge.
	ManagedAccountsTable = "accounts"
	// ManagedAccountsInverseTable is the table name for the Account entity.
	// It exists in this package in order to avoid circular dependency with the "account" package.
	ManagedAccountsInverseTable = "accounts"
	// ManagedAccountsColumn is the table column denoting the managed_accounts relation/edge.
	ManagedAccountsColumn = "visitor_managed_accounts"
	// CartsTable is the table that holds the carts relation/edge.
	CartsTable = "carts"
	// CartsInverseTable is the table name for the Cart entity.
	// It exists in this package in order to avoid circular dependency with the "cart" package.
	CartsInverseTable = "carts"
	// CartsColumn is the table column denoting the carts relation/edge.
	CartsColumn = "visitor_carts"
)

// Columns holds all SQL columns for visitor fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldName,
	FieldSex,
	FieldBillStatus,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultName holds the default value on creation for the "name" field.
	DefaultName string
)
